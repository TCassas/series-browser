{"version":3,"sources":["components/Home/Header.jsx","components/Home/Form.jsx","components/Home/ShowsList.jsx","components/Home.jsx","components/Info/Episode.jsx","components/Info/SeriesInfo.jsx","components/Info.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","h1","drag","className","Form","props","onSubmit","submit","type","name","id","placeholder","onChange","change","i","whileHover","transform","class","ShowsList","containerVariants","hidden","opacity","x","visible","delay","stiffnes","exit","shows","div","dragConstraints","right","left","items","map","show","article","variants","initial","animate","style","backgroundImage","image","medium","to","Home","useState","search","setSearch","setShows","visibleShows","setVisibleShows","useEffect","appWidth","document","querySelector","getBoundingClientRect","width","sliderWidth","length","handleSubmit","e","a","preventDefault","Axios","get","request","data","transition","target","value","Episode","loading","setLoading","showInfo","setShowInfo","y","episode","summary","replace","number","onClick","height","dangerouslySetInnerHTML","__html","DOMpurify","sanitize","SeriesInfo","menuOption","setMenuOption","section","status","genres","genre","network","country","premiered","runtime","schedule","days","time","colSpan","href","officialSite","episodes","Info","Match","setShow","useParams","fetchShow","axios","App","location","useLocation","path","exact","component","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.158ed78a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <motion.h1 drag>\r\n                <span>TV Shows</span>\r\n                <span>Movies</span>\r\n                <span className='resaltar'>Search</span>\r\n            </motion.h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\n\r\nexport default function Form(props) {\r\n    return(\r\n        <form onSubmit={props.submit}>\r\n            <input \r\n                type='text' \r\n                name='search' \r\n                id='search' \r\n                placeholder='Matrix'\r\n                onChange={props.change}\r\n            ></input>\r\n            <button type='button'\r\n                \r\n            ><motion.i whileHover={{transform: 'rotate(-90deg)'}} class=\"fas fa-search\"></motion.i></button>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function ShowsList(props) {\r\n    const containerVariants = {\r\n        hidden: {\r\n            opacity: 0,\r\n            x: '100vw'\r\n        },\r\n        visible: {\r\n            opacity: 1,\r\n            x: 0,\r\n            x: '0',\r\n            transition: { delay: 0.5, stiffnes: 1 }\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            x: '-100vw'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <section id='show-list-container'>\r\n            {props.shows != \"empty\" ?\r\n                <motion.div id='show-list'\r\n                    drag='x'\r\n                    dragConstraints={{right: 0, left: props.items}}\r\n                >\r\n                {props.shows.map(show =>\r\n                    <motion.article key={show.show.id}\r\n                        variants={containerVariants}\r\n                        initial = 'hidden'\r\n                        animate = 'visible'\r\n                        exit = 'exit'\r\n                    >\r\n                        <article \r\n                            className='show-image'\r\n                            style={{backgroundImage: show.show.image && `url(${show.show.image.medium})`}}\r\n                        />\r\n                        \r\n                        <Link to={`/show/${show.show.id}`} key={show.show.id}> {show.show.name} </Link>\r\n                    </motion.article>            \r\n                )}\r\n                </motion.div>\r\n            :\r\n                <p className=\"error\">No shows has been found (╯°益°)╯彡┻━┻</p>\r\n            }\r\n        </section>\r\n    )\r\n}","import React, { useState, useEFfect, useEffect } from 'react'\r\nimport Header from './Home/Header';\r\nimport Form from './Home/Form';\r\nimport ShowsList from './Home/ShowsList';\r\nimport { Switch, Link, Route } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Home = () => {\r\n    const [search, setSearch] = useState('');\r\n    const [shows, setShows] = useState([]);\r\n    const [visibleShows, setVisibleShows] = useState(0)\r\n\r\n    const containerVariants = {\r\n        hidden: {\r\n            opacity: 0,\r\n        },\r\n        visible: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: { delay: 0.5 }\r\n        },\r\n        exit: {\r\n            opacity: 0\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Ancho de la aplicación - padding\r\n        let appWidth = ((document.querySelector('.App').getBoundingClientRect().width - 80));\r\n        //Ancho total (sobresaliente de la pagina) del slider\r\n        let sliderWidth = (200 * shows.length);\r\n\r\n        //Si el ancho del slider es mayor al de la aplicación, calcular el espacio de \"juego\" sobrante, caso contrario no hay espacio sobrante para jugar\r\n        setVisibleShows(sliderWidth > appWidth ? appWidth - sliderWidth : 0);\r\n    })\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const request = await Axios.get(`https://api.tvmaze.com/search/shows?q=${search}`);\r\n        if(request.data.length != 0) {\r\n            setShows(request.data);\r\n        } else {\r\n            setShows(\"empty\");\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <motion.div className='App'\r\n            variants={containerVariants}\r\n            initial = 'hidden'\r\n            animate = 'visible'\r\n            exit = 'exit'\r\n        >\r\n            <Header />\r\n            <Form submit={handleSubmit} change={handleChange}/>\r\n            <ShowsList shows={shows} items={visibleShows}/>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { React, useState, useEffect } from 'react'\r\nimport DOMpurify from 'dompurify'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\n\r\nconst Episode = (props) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [showInfo, setShowInfo] = useState(false);\r\n\r\n    const containerVariants = {\r\n        hidden: {\r\n            opacity: 0,\r\n            y: -10\r\n        },\r\n        visible: {\r\n            opacity: 1,\r\n            y: 0,\r\n            transition: { delay: 0.2 * props.i }\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n            y: -10\r\n        }\r\n    }\r\n\r\n    useEffect(async() => {\r\n        if(props.episode.summary !== \"\" && props.episode.summary) {\r\n            props.episode.summary = await props.episode.summary.replace('</p><p><br />', '');\r\n        }\r\n        setLoading(!loading);\r\n    }, [])\r\n\r\n    const handleInfo = () => {\r\n        setShowInfo(!showInfo);\r\n    }\r\n\r\n    return (\r\n        <motion.article className='episode-article'\r\n            variants={containerVariants}\r\n            initial = 'hidden'\r\n            animate = 'visible'\r\n            exit = 'exit'\r\n        >\r\n            {!loading ?\r\n            <div>\r\n                <div className='episode-header'>\r\n                    <span className='episode-number'>#{props.episode.number}</span>\r\n                    <p className='episode-title'>{props.episode.name}</p>\r\n                    {props.episode.summary ?\r\n                        <span \r\n                            className='episode-infoButton'\r\n                            onClick={handleInfo}\r\n                        >\r\n                            {showInfo ? \r\n                                \"⤊\"\r\n                            : \r\n                                \"⤋\"\r\n                            }\r\n                        </span>\r\n                    :\r\n                        null\r\n                    }\r\n                </div>\r\n                    <AnimatePresence>\r\n                        {showInfo ? \r\n                            \r\n                                <motion.div className='episode-info'\r\n                                    key={ props.episode.id }\r\n                                    initial={{ height: 0, opacity: 0 }}\r\n                                    animate={{ height: 'auto', opacity: 1 }} \r\n                                    exit={{ height: 0, opacity: 0 }}\r\n                                    \r\n                                >\r\n                                    <p className='tick'>╔</p>\r\n                                    <i dangerouslySetInnerHTML={{__html: DOMpurify.sanitize(props.episode.summary)}}></i>\r\n                                    <p className='tick'>╝</p>\r\n                                </motion.div>\r\n                            \r\n                        :\r\n                            null\r\n                        }\r\n                    </AnimatePresence>\r\n            </div>\r\n            : null}\r\n        </motion.article>\r\n    )\r\n}\r\n\r\nexport default Episode;","import { React, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\nimport DOMpurify from 'dompurify'\r\nimport Episode from './Episode'\r\n\r\nconst SeriesInfo= (props) => {\r\n    const [menuOption, setMenuOption] = useState(true);\r\n\r\n    const containerVariants = {\r\n        hidden: {\r\n            opacity: 0,\r\n        },\r\n        visible: {\r\n            opacity: 1,\r\n            transition: { delay: 0.5 }\r\n        },\r\n        exit: {\r\n            opacity: 0,\r\n        }\r\n    }\r\n\r\n    const handleOptionInfo = () => {\r\n        setMenuOption(true);\r\n    }\r\n\r\n    const handleOptionEpi = () => {\r\n        setMenuOption(false);\r\n    }\r\n\r\n    return (\r\n        <motion.div className='App info'\r\n            variants={containerVariants}\r\n            initial = 'hidden'\r\n            animate = 'visible'\r\n            exit = 'exit'\r\n        >\r\n            <section className='info-left'>\r\n                <h2> {props.show.name} </h2>\r\n                <article \r\n                        className='info-show-image'\r\n                        style={{backgroundImage: props.show.image && `url(${props.show.image.medium})`}}\r\n                />\r\n                <div className='info-show-summary' dangerouslySetInnerHTML={{__html: DOMpurify.sanitize(props.show.summary)}}></div>\r\n                <Link to={`/`}> Go Back </Link>\r\n            </section>\r\n            <section className='info-right'>\r\n                <section id='show-menu'>\r\n                    <h2 id={menuOption && 'selected'} onClick={handleOptionInfo} > Information</h2>\r\n                    <h2 id={!menuOption && 'selected'} onClick={handleOptionEpi} >Episodes</h2>\r\n                </section>\r\n                {menuOption ? \r\n                    <AnimatePresence>\r\n                        <motion.section id='show-information'\r\n                            variants={containerVariants}\r\n                            initial = 'hidden'\r\n                            animate = 'visible'\r\n                            exit = 'exit'\r\n                        >\r\n                            <table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Field</th>\r\n                                        <th>Data</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Status</td>\r\n                                        <td>{props.show.status}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Genres</td>\r\n                                        <td>{props.show.genres.map((genre, i) => genre + (i + 1 != props.show.genres.length ? ', ' : ''))}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Network</td>\r\n                                        <td>{props.show.network.name} ({props.show.network.country.name})</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Premiered</td>\r\n                                        <td>{props.show.premiered}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Type</td>\r\n                                        <td>{props.show.type}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Runtime</td>\r\n                                        <td>{props.show.runtime}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Schedule</td>\r\n                                        <td>{props.show.schedule.days[0]} - {props.show.schedule.time}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td colSpan=\"2\"><a href={props.show.officialSite}>Official Site</a></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <article>\r\n                                <p><i>Network: {props.show.network.name} ({props.show.network.country.name})</i></p>\r\n                            </article>\r\n                        </motion.section>\r\n                    </AnimatePresence>\r\n                :\r\n                    <AnimatePresence>\r\n                        <motion.section className='episodes'\r\n                            variants={containerVariants}\r\n                            initial = 'hidden'\r\n                            animate = 'visible'\r\n                            exit = 'exit'\r\n                            key={props.show.id}\r\n                        >\r\n                            {props.show.episodes.map((episode, i) =>\r\n                                <Episode episode={episode} key={episode.id} i={i} />\r\n                            )}\r\n                        </motion.section>\r\n                    </AnimatePresence>\r\n                }\r\n            </section>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default SeriesInfo","import { React, useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\"\r\nimport SeriesInfo from './Info/SeriesInfo'\r\n\r\nconst Info = ({ Match }) => {\r\n    const [show, setShow] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const { id } = useParams();\r\n\r\n    const fetchShow = async () => {\r\n        let show = await axios.get(`https://api.tvmaze.com/shows/${id}`);\r\n        show = show.data;\r\n        \r\n        let episodes = await axios.get(`https://api.tvmaze.com/shows/${id}/episodes`);\r\n        show.episodes = episodes.data;\r\n\r\n        return show;\r\n    }\r\n\r\n    useEffect(async () => {\r\n        const show = await fetchShow();\r\n\r\n        setShow(show);\r\n\r\n        setLoading(!loading);\r\n    }, [])\r\n\r\n    return (\r\n        !loading && <SeriesInfo show={show} />\r\n\r\n    )\r\n}\r\n\r\nexport default Info;","import './App.css'\r\nimport Home from './components/Home'\r\nimport Info from './components/Info'\r\nimport React  from 'react'\r\nimport { Switch, Link, Route, useLocation } from 'react-router-dom';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  return (\r\n    <div>\r\n      <AnimatePresence>\r\n        <Switch location={location} key={location.key}>\r\n          <Route path='/' exact component={Home}/>\r\n          <Route path='/show/:id' component={Info}/>\r\n        </Switch>\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}